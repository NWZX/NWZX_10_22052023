name: Workflows CI

on:
  push:
      branches: [ "master" ]
#  workflow_run:
#      workflows: ["Java CI"]
#      types:
#        - completed

jobs:
  ci-front:
    name: Angular CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'front'

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test -- --watch=false --browsers=ChromeHeadless

    - uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        projectBaseDir: front
    - uses: sonarsource/sonarqube-quality-gate-action@master
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        scanMetadataReportFile: front/.scannerwork/report-task.txt
    outputs:
      quality-gate-status-front: ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}

  ci-back:
    name: Java/Spring CI
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: 'back'
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Cache SonarQube packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn clean install --file pom.xml

    - name: Launch Test with Maven
      run: mvn clean test

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACK }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=NWZX_10_BACK -Dsonar.projectName='NWZX_10_BACK'
    - uses: sonarsource/sonarqube-quality-gate-action@master
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACK }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        scanMetadataReportFile: back/target/sonar/report-task.txt
    outputs:
      quality-gate-status-back: ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}
  ci-quality:
    name: Quality Gate
    needs: [ci-front, ci-back]
    runs-on: ubuntu-latest
    if: ${{ needs.ci-front.outputs.quality-gate-status-front == 'PASSED' && needs.ci-back.outputs.quality-gate-status-back == 'PASSED' }}

    steps:
      - name: Validate
        run: echo "FRONT [${{ needs.ci-front.outputs.quality-gate-status-front == 'PASSED'}}] | BACK [${{ needs.ci-back.outputs.quality-gate-status-back == 'PASSED' }}]"

  ci-docker:
    name: Docker Build/Publish
    needs: [ci-quality]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build and push (Front)
      uses: docker/build-push-action@v4
      with:
        context: ./front
        file: ./front/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-front:latest
    - name: Build and push (Back)
      uses: docker/build-push-action@v4
      with:
        context: ./back
        file: ./back/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-back:latest
